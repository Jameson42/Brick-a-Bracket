/*
Brick-a-Bracket Buttons
Version 1.1
Jameson Gagnepain

Works with Brick-a-Bracket server to track times
for 1 vs 1 competition matches using an NXT and
one or more touch sensors.

Center button and sensor 3 => Start match
Buttom button and sensor 4 => Stop match
Left button and sensor 1 => Player 1 winner
Right button and sensor 2 => Player 2 winner

Bottom button requires enhanced NXT firmware
*/

bool Running = false;
bool SentTime = false;
long StartTick;

string MSToString(long ms)
{
  string tempStr = NumToStr(ms%1000);
  while (strlen(tempStr)<3)
    tempStr = StrCat("0",tempStr);
  return StrCat(NumToStr(ms/1000),".",tempStr);
}

void Display(string seconds, int player)
{
  // Convert to LCD_LINE# 2,4
  long line = (4 - player) * 16;
  TextOut(0, line, seconds);
}

void MatchScreen()
{
  TextOut(0,LCD_LINE1,"Player 1:",DRAW_OPT_CLEAR_WHOLE_SCREEN);
  TextOut(0,LCD_LINE3,"Player 2:");
  TextOut(0,LCD_LINE8,"Start 1   2 Stop");
}

void SendStatus(string status)
{
  SendResponseString(0,status);
}

void SendTime(int player)
{
  if (!Running || SentTime)
    return;
  long ms = CurrentTick() - StartTick;
  string seconds = MSToString(ms);
  string message = StrCat(NumToStr(player),"-",seconds);
  SendResponseString(1,message);
  Display(seconds,player);
  SentTime = true;
}

void StartMatch()
{
  MatchScreen();
  StartTick = CurrentTick();
  Running = true;
  SentTime = false;
  SendStatus("Running");
}

void StopMatch()
{
  Running = false;
  SendStatus("Stopped");
}

void RemoteStart()
{
  if (Running)
    return;
  SendStatus("Start");
}

void RemoteStop()
{
  if (!Running)
    return;
  SendStatus("Stop");
}

void ReadStatus()
{
  string message;
  ReceiveMessage(MAILBOX6,true,message);
  switch(message)
  {
    case "Start":
      StartMatch();
      break;
    case "Stop":
      StopMatch();
      break;
    default:
      break;
  }
}

void ReadButtons()
{
  if (ButtonPressed(BTNCENTER,true))
    RemoteStart();
  #ifdef __ENHANCED_FIRMWARE
  if (ButtonPressed(BTNEXIT,true))
    RemoteStop();
  #endif
  if (ButtonPressed(BTNLEFT,true))
    SendTime(1);
  if (ButtonPressed(BTNRIGHT,true))
    SendTime(2);
}

void ReadSensors()
{
  if (SensorBoolean(S1))
    RemoteStart();
  if (SensorBoolean(S4))
    RemoteStop();
  if (SensorBoolean(S2))
    SendTime(1);
  if (SensorBoolean(S3))
    SendTime(2);
}

void MatchLoop()
{
  while (true)
  {
    ReadStatus();
    ReadButtons();
    ReadSensors();
  }
}

task main()
{
 #ifdef __ENHANCED_FIRMWARE
 SetLongAbort(true);
 #endif
 SetSensorTouch(S1);
 SetSensorTouch(S2);
 SetSensorTouch(S3);
 SetSensorTouch(S4);
 MatchScreen();
 SendStatus("Ready");
 MatchLoop();
}
